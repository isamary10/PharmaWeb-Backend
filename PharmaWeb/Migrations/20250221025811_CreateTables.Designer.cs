// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PharmaWeb.Persistencia;

#nullable disable

namespace PharmaWeb.Migrations
{
    [DbContext(typeof(PharmaWebContext))]
    [Migration("20250221025811_CreateTables")]
    partial class CreateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PharmaWeb.Models.Medicine", b =>
                {
                    b.Property<int>("MedicineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicineId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("MedicineId");

                    b.ToTable("Tb_Pharma_Medicine");
                });

            modelBuilder.Entity("PharmaWeb.Models.MedicineRawMaterial", b =>
                {
                    b.Property<int>("MedicineId")
                        .HasColumnType("int");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.HasKey("MedicineId", "RawMaterialId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("Tb_Pharma_MedicineRawMaterial");
                });

            modelBuilder.Entity("PharmaWeb.Models.RawMaterial", b =>
                {
                    b.Property<int>("RawMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RawMaterialId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RawMaterialId");

                    b.ToTable("Tb_Pharma_RawMaterial");
                });

            modelBuilder.Entity("PharmaWeb.Models.MedicineRawMaterial", b =>
                {
                    b.HasOne("PharmaWeb.Models.Medicine", "Medicine")
                        .WithMany("Composition")
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmaWeb.Models.RawMaterial", "RawMaterial")
                        .WithMany("Composition")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicine");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("PharmaWeb.Models.Medicine", b =>
                {
                    b.Navigation("Composition");
                });

            modelBuilder.Entity("PharmaWeb.Models.RawMaterial", b =>
                {
                    b.Navigation("Composition");
                });
#pragma warning restore 612, 618
        }
    }
}
